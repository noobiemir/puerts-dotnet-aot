name: dotnet publish (v8 windows)

on: 
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'tag name'
        required: true

env:
  RUNID: 613573412
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  BUILD_PATH: '${{github.workspace}}/artifacts'

jobs:
  windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v3
      - name: BuildWindows
        uses: ./.github/workflows/composites/unity-build-plugins/windows/
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          backend: v8_9.4
          
  build:
    runs-on: ubuntu-latest
    needs: [windows]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Download v8
      uses: actions/download-artifact@v1
      with:
        name: Unity_Plugins (v8_9.4_Release)
        path: ./.net8-aot/runtimes/

    - name: CD
      shell: powershell
      run: |
        cd .net8-aot

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Solution
      run: 'dotnet build --no-restore --configuration Release -p:Version="${{ github.event.inputs.tag_name }}" -p:InformationalVersion="${{ github.event.inputs.tag_name }}+${{github.sha}}"'
      
    - name: Create Packages
      if: success() && github.event_name != 'pull_request'
      run: 'nuget pack Puerts.DotNet.nuspec -Version "${{ github.event.inputs.tag_name }}" -OutputDirectory "${{env.BUILD_PATH}}" -p Configuration=Release'

    - name: Upload Packages
      if: success() && github.event_name != 'pull_request'
      uses: actions/upload-artifact@v3
      with:
        name: packages
        path: '${{env.BUILD_PATH}}'

  publish:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: packages

    - name: Publish Packages GitHub
      run: |
        for package in $(find -name "*.nupkg"); do
          echo "${0##*/}": Pushing $package...
          dotnet nuget push $package --source https://nuget.pkg.github.com/noobiemir/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
        done